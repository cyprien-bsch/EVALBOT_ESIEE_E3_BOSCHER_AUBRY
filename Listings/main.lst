


ARM Macro Assembler    Page 1 


    1 00000000         ; Evalbot (Cortex M3 de Texas Instrument)
    2 00000000         ; programme - Exercice 2.1 : un appui sur SW1 met le Rob
                       ot ;EVALBOT 
    3 00000000         ; en rotation sur lui-m�me dans un sens donn�,
    4 00000000         ; un appui sur SW2 inverse le sens de rotation
    5 00000000         ; du robot et vice versa.
    6 00000000         
    7 00000000                 AREA             |.text|, CODE, READONLY
    8 00000000                 ENTRY
    9 00000000                 EXPORT           __main
   10 00000000                 EXPORT           ROT_LEFT
   11 00000000                 EXPORT           ROT_RIGHT
   12 00000000         
   13 00000000         ;; The IMPORT command specifies that a symbol is defined
                        in a shared object at runtime.
   14 00000000                 IMPORT           MOTEUR_INIT ; initialise les mo
                                                            teurs (configure le
                                                            s pwms + GPIO)
   15 00000000         
   16 00000000                 IMPORT           MOTEUR_DROIT_ON ; activer le mo
                                                            teur droit
   17 00000000                 IMPORT           MOTEUR_DROIT_OFF ; d�activer 
                                                            le moteur droit
   18 00000000                 IMPORT           MOTEUR_DROIT_AVANT ; moteur dro
                                                            it tourne vers l'av
                                                            ant
   19 00000000         
   20 00000000                 IMPORT           MOTEUR_GAUCHE_ON ; activer le m
                                                            oteur gauche
   21 00000000                 IMPORT           MOTEUR_GAUCHE_OFF ; d�activer
                                                             le moteur gauche
   22 00000000                 IMPORT           MOTEUR_GAUCHE_AVANT ; moteur ga
                                                            uche tourne vers l'
                                                            avant
   23 00000000         
   24 00000000                 IMPORT           SWITCH_INIT
   25 00000000         
   26 00000000                 IMPORT           BUMPER_INIT
   27 00000000         
   28 00000000                 IMPORT           LED_CONFIG_ALL
   29 00000000                 IMPORT           LED_ETHERNET_1_OFF
   30 00000000                 IMPORT           LED_ETHERNET_1_ON
   31 00000000                 IMPORT           LED_ETHERNET_2_OFF
   32 00000000                 IMPORT           LED_ETHERNET_2_ON
   33 00000000         
   34 00000000                 IMPORT           BUMPER_CHECK_DROIT
   35 00000000                 IMPORT           BUMPER_CHECK_GAUCHE
   36 00000000         
   37 00000000                 IMPORT           HANDLE_BUMPER_SET_SPEED
   38 00000000         
   39 00000000                 IMPORT           HANDLE_SWITCH_PRESS
   40 00000000                 IMPORT           TRAJECTORY_LEFT
   41 00000000                 IMPORT           TRAJECTORY_RIGHT
   42 00000000         
   43 00000000         
   44 00000000         
   45 00000000         __main
   46 00000000 F7FF FFFE       BL               SWITCH_INIT
   47 00000004 F7FF FFFE       BL               LED_CONFIG_ALL



ARM Macro Assembler    Page 2 


   48 00000008 F7FF FFFE       BL               MOTEUR_INIT
   49 0000000C F7FF FFFE       BL               BUMPER_INIT
   50 00000010         
   51 00000010         
   52 00000010         INITIAL_STATE
   53 00000010 F7FF FFFE       bl               HANDLE_SWITCH_PRESS
   54 00000014 F7FF FFFE       BL               HANDLE_BUMPER_SET_SPEED
   55 00000018 E7FA            b                INITIAL_STATE
   56 0000001A         
   57 0000001A         ROT_RIGHT
   58 0000001A F7FF FFFE       BL               LED_ETHERNET_1_ON
   59 0000001E F7FF FFFE       BL               LED_ETHERNET_2_OFF
   60 00000022 F7FF FFFE       BL               MOTEUR_DROIT_ON
   61 00000026 F7FF FFFE       BL               MOTEUR_GAUCHE_ON
   62 0000002A F7FF FFFE       BL               MOTEUR_GAUCHE_AVANT
   63 0000002E F7FF FFFE       BL               MOTEUR_DROIT_AVANT
   64 00000032 F7FF FFFE       BL               TRAJECTORY_RIGHT
   65 00000036 E00E            b                LOOP
   66 00000038         
   67 00000038         ROT_LEFT
   68 00000038 F7FF FFFE       BL               LED_ETHERNET_2_ON
   69 0000003C F7FF FFFE       BL               LED_ETHERNET_1_OFF
   70 00000040 F7FF FFFE       BL               MOTEUR_DROIT_ON
   71 00000044 F7FF FFFE       BL               MOTEUR_GAUCHE_ON
   72 00000048 F7FF FFFE       BL               MOTEUR_DROIT_AVANT
   73 0000004C F7FF FFFE       BL               MOTEUR_GAUCHE_AVANT
   74 00000050 F7FF FFFE       BL               TRAJECTORY_LEFT
   75 00000054 E7FF            b                LOOP
   76 00000056         
   77 00000056         LOOP
   78 00000056 F7FF FFFE       BL               BUMPER_CHECK_GAUCHE
   79 0000005A F7FF FFFE       BL               BUMPER_CHECK_DROIT
   80 0000005E F7FF FFFE       BL               HANDLE_SWITCH_PRESS
   81 00000062 E7F8            B                LOOP
   82 00000064         
   83 00000064         
   84 00000064                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\objects\main.d -o.\objects\main.o -I.\RTE\_Target_1 -IC:\Users\c
ypbo\AppData\Local\Arm\Packs\ARM\CMSIS\5.5.1\CMSIS\Core\Include -IC:\Users\cypb
o\AppData\Local\Arm\Packs\ARM\CMSIS\5.5.1\Device\ARM\ARMCM3\Include --predefine
="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 528" --predefine="_RTE_ SE
TA 1" --predefine="ARMCM3 SETA 1" --list=.\listings\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 7 in file main.s
   Uses
      None
Comment: .text unused
INITIAL_STATE 00000010

Symbol: INITIAL_STATE
   Definitions
      At line 52 in file main.s
   Uses
      At line 55 in file main.s
Comment: INITIAL_STATE used once
LOOP 00000056

Symbol: LOOP
   Definitions
      At line 77 in file main.s
   Uses
      At line 65 in file main.s
      At line 75 in file main.s
      At line 81 in file main.s

ROT_LEFT 00000038

Symbol: ROT_LEFT
   Definitions
      At line 67 in file main.s
   Uses
      At line 10 in file main.s
Comment: ROT_LEFT used once
ROT_RIGHT 0000001A

Symbol: ROT_RIGHT
   Definitions
      At line 57 in file main.s
   Uses
      At line 11 in file main.s
Comment: ROT_RIGHT used once
__main 00000000

Symbol: __main
   Definitions
      At line 45 in file main.s
   Uses
      At line 9 in file main.s
Comment: __main used once
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

BUMPER_CHECK_DROIT 00000000

Symbol: BUMPER_CHECK_DROIT
   Definitions
      At line 34 in file main.s
   Uses
      At line 79 in file main.s
Comment: BUMPER_CHECK_DROIT used once
BUMPER_CHECK_GAUCHE 00000000

Symbol: BUMPER_CHECK_GAUCHE
   Definitions
      At line 35 in file main.s
   Uses
      At line 78 in file main.s
Comment: BUMPER_CHECK_GAUCHE used once
BUMPER_INIT 00000000

Symbol: BUMPER_INIT
   Definitions
      At line 26 in file main.s
   Uses
      At line 49 in file main.s
Comment: BUMPER_INIT used once
HANDLE_BUMPER_SET_SPEED 00000000

Symbol: HANDLE_BUMPER_SET_SPEED
   Definitions
      At line 37 in file main.s
   Uses
      At line 54 in file main.s
Comment: HANDLE_BUMPER_SET_SPEED used once
HANDLE_SWITCH_PRESS 00000000

Symbol: HANDLE_SWITCH_PRESS
   Definitions
      At line 39 in file main.s
   Uses
      At line 53 in file main.s
      At line 80 in file main.s

LED_CONFIG_ALL 00000000

Symbol: LED_CONFIG_ALL
   Definitions
      At line 28 in file main.s
   Uses
      At line 47 in file main.s
Comment: LED_CONFIG_ALL used once
LED_ETHERNET_1_OFF 00000000

Symbol: LED_ETHERNET_1_OFF
   Definitions
      At line 29 in file main.s
   Uses
      At line 69 in file main.s
Comment: LED_ETHERNET_1_OFF used once
LED_ETHERNET_1_ON 00000000




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

Symbol: LED_ETHERNET_1_ON
   Definitions
      At line 30 in file main.s
   Uses
      At line 58 in file main.s
Comment: LED_ETHERNET_1_ON used once
LED_ETHERNET_2_OFF 00000000

Symbol: LED_ETHERNET_2_OFF
   Definitions
      At line 31 in file main.s
   Uses
      At line 59 in file main.s
Comment: LED_ETHERNET_2_OFF used once
LED_ETHERNET_2_ON 00000000

Symbol: LED_ETHERNET_2_ON
   Definitions
      At line 32 in file main.s
   Uses
      At line 68 in file main.s
Comment: LED_ETHERNET_2_ON used once
MOTEUR_DROIT_AVANT 00000000

Symbol: MOTEUR_DROIT_AVANT
   Definitions
      At line 18 in file main.s
   Uses
      At line 63 in file main.s
      At line 72 in file main.s

MOTEUR_DROIT_OFF 00000000

Symbol: MOTEUR_DROIT_OFF
   Definitions
      At line 17 in file main.s
   Uses
      None
Comment: MOTEUR_DROIT_OFF unused
MOTEUR_DROIT_ON 00000000

Symbol: MOTEUR_DROIT_ON
   Definitions
      At line 16 in file main.s
   Uses
      At line 60 in file main.s
      At line 70 in file main.s

MOTEUR_GAUCHE_AVANT 00000000

Symbol: MOTEUR_GAUCHE_AVANT
   Definitions
      At line 22 in file main.s
   Uses
      At line 62 in file main.s
      At line 73 in file main.s

MOTEUR_GAUCHE_OFF 00000000




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
External symbols

Symbol: MOTEUR_GAUCHE_OFF
   Definitions
      At line 21 in file main.s
   Uses
      None
Comment: MOTEUR_GAUCHE_OFF unused
MOTEUR_GAUCHE_ON 00000000

Symbol: MOTEUR_GAUCHE_ON
   Definitions
      At line 20 in file main.s
   Uses
      At line 61 in file main.s
      At line 71 in file main.s

MOTEUR_INIT 00000000

Symbol: MOTEUR_INIT
   Definitions
      At line 14 in file main.s
   Uses
      At line 48 in file main.s
Comment: MOTEUR_INIT used once
SWITCH_INIT 00000000

Symbol: SWITCH_INIT
   Definitions
      At line 24 in file main.s
   Uses
      At line 46 in file main.s
Comment: SWITCH_INIT used once
TRAJECTORY_LEFT 00000000

Symbol: TRAJECTORY_LEFT
   Definitions
      At line 40 in file main.s
   Uses
      At line 74 in file main.s
Comment: TRAJECTORY_LEFT used once
TRAJECTORY_RIGHT 00000000

Symbol: TRAJECTORY_RIGHT
   Definitions
      At line 41 in file main.s
   Uses
      At line 64 in file main.s
Comment: TRAJECTORY_RIGHT used once
20 symbols
360 symbols in table
