


ARM Macro Assembler    Page 1 


    1 00000000         ; Evalbot (Cortex M3 de Texas Instrument)
    2 00000000         ; programme - Exercice 2.1 : un appui sur SW1 met le Rob
                       ot ;EVALBOT 
    3 00000000         ; en rotation sur lui-m�me dans un sens donn�,
    4 00000000         ; un appui sur SW2 inverse le sens de rotation
    5 00000000         ; du robot et vice versa.
    6 00000000         
    7 00000000                 AREA             |.text|, CODE, READONLY
    8 00000000                 ENTRY
    9 00000000                 EXPORT           __main
   10 00000000         
   11 00000000         ;; The IMPORT command specifies that a symbol is defined
                        in a shared object at runtime.
   12 00000000                 IMPORT           MOTEUR_INIT ; initialise les mo
                                                            teurs (configure le
                                                            s pwms + GPIO)
   13 00000000         
   14 00000000                 IMPORT           MOTEUR_DROIT_ON ; activer le mo
                                                            teur droit
   15 00000000                 IMPORT           MOTEUR_DROIT_OFF ; d�activer 
                                                            le moteur droit
   16 00000000                 IMPORT           MOTEUR_DROIT_AVANT ; moteur dro
                                                            it tourne vers l'av
                                                            ant
   17 00000000                 IMPORT           MOTEUR_DROIT_ARRIERE ; moteur d
                                                            roit tourne vers l'
                                                            arri�re
   18 00000000                 IMPORT           MOTEUR_DROIT_INVERSE ; inverse 
                                                            le sens de rotation
                                                             du moteur droit
   19 00000000         
   20 00000000                 IMPORT           MOTEUR_GAUCHE_ON ; activer le m
                                                            oteur gauche
   21 00000000                 IMPORT           MOTEUR_GAUCHE_OFF ; d�activer
                                                             le moteur gauche
   22 00000000                 IMPORT           MOTEUR_GAUCHE_AVANT ; moteur ga
                                                            uche tourne vers l'
                                                            avant
   23 00000000                 IMPORT           MOTEUR_GAUCHE_ARRIERE ; moteur 
                                                            gauche tourne vers 
                                                            l'arri�re
   24 00000000                 IMPORT           MOTEUR_GAUCHE_INVERSE ; inverse
                                                             le sens de rotatio
                                                            n du moteur gauche
   25 00000000         
   26 00000000                 IMPORT           BUMPER_INIT
   27 00000000         
   28 00000000                 IMPORT           LED_CONFIG_ALL
   29 00000000                 IMPORT           LED_1_ON
   30 00000000                 IMPORT           LED_2_ON
   31 00000000                 IMPORT           LED_ALL_ON
   32 00000000                 IMPORT           LED_1_OFF
   33 00000000                 IMPORT           LED_2_OFF
   34 00000000                 IMPORT           LED_ALL_OFF
   35 00000000         
   36 00000000         
   37 00000000         
   38 00000000         ; This register controls the clock gating logic in norma
                       l Run mode



ARM Macro Assembler    Page 2 


   39 00000000         ; SYSCTL_RCGC2_R (p291 datasheet de lm3s9b92.pdf
   40 00000000         
   41 00000000 400FE108 
                       SYSCTL_PERIPH_GPIOF
                               EQU              0x400FE108
   42 00000000         
   43 00000000         ; The GPIODATA register is the data register
   44 00000000         ; GPIO Port D (APB) base: 0x4002.5000 (p416 datasheet de
                        lm3s9B92.pdf
   45 00000000         
   46 00000000 40007000 
                       GPIO_PORTD_BASE
                               EQU              0x40007000  ;pour les SW (PORT 
                                                            D)
   47 00000000 40024000 
                       GPIO_PORTE_BASE
                               EQU              0x40024000  ;pour les BUMPER
   48 00000000         
   49 00000000         
   50 00000000         
   51 00000000         ; Digital enable register
   52 00000000         ; To use the pin as a digital input or output, the corre
                       sponding GPIODEN bit must be set.
   53 00000000         ; GPIO Digital Enable (p437 datasheet de lm3s9B92.pdf)
   54 00000000         
   55 00000000 0000051C 
                       GPIO_O_DEN
                               EQU              0x0000051C
   56 00000000         
   57 00000000         ; Pull up Register (for SW or BUMP)
   58 00000000 00000510 
                       GPIO_O_PUR
                               EQU              0x00000510
   59 00000000         
   60 00000000         ; Port select
   61 00000000         
   62 00000000 000000C0 
                       PORT67  EQU              0xC0        ; SW 1 et 2 - Ligne
                                                            s 6 et 7 Port D
   63 00000000 00000040 
                       PORT6   EQU              0x40        ; SW 1  - Lignes 6 
                                                            Port D
   64 00000000 00000080 
                       PORT7   EQU              0x80        ; SW 2  - Lignes 7 
                                                            Port D
   65 00000000         
   66 00000000         
   67 00000000         ; PORT E : selection du BUMPER DROIT, LIGNE 0 du Port E
   68 00000000         
   69 00000000 00000001 
                       PORT0   EQU              0x01
   70 00000000         
   71 00000000         ; PORT E : selection du BUMPER DROIT, LIGNE 1 du Port E
   72 00000000         
   73 00000000 00000002 
                       PORT1   EQU              0x02
   74 00000000         
   75 00000000         
   76 00000000         



ARM Macro Assembler    Page 3 


   77 00000000 002FFFFF 
                       DUREE_SHORT
                               EQU              0x002FFFFF
   78 00000000         
   79 00000000         __main
   80 00000000         
   81 00000000         ; Enable the Port D,E and F peripheral clock by setting 
                       bit 3,4,5 (0x38 == 0b111000)  
   82 00000000         ;(p291 datasheet de lm3s9B96.pdf), (GPIO::FEDCBA)
   83 00000000         
   84 00000000 4E36            ldr              r6, = SYSCTL_PERIPH_GPIOF 
                                                            ;; RCGC2
   85 00000002 F04F 0038       mov              r0, #0x00000038 ;; Enable clock
                                                             sur GPIO D = SW 
   86 00000006 6030            str              r0, [r6]
   87 00000008         
   88 00000008         ;"There must be a delay of 3 system clocks before any GP
                       IO reg. access  (p413 datasheet de lm3s9B92.pdf)
   89 00000008         ;tres tres important....;; pas necessaire en simu ou en 
                       debbug step by step...
   90 00000008 BF00            nop
   91 0000000A BF00            nop
   92 0000000C BF00            nop
   93 0000000E         
   94 0000000E         ;Configuration des switchs : SW1 et SW2
   95 0000000E 4F34            ldr              r7, = GPIO_PORTD_BASE+GPIO_O_DE
N 
                                                            ;; Enable Digital F
                                                            unction 
   96 00000010 F04F 00C0       ldr              r0, = PORT67
   97 00000014 6038            str              r0, [r7]
   98 00000016         
   99 00000016 4F33            ldr              r7, = GPIO_PORTD_BASE+GPIO_O_PU
R 
                                                            ;; Pull Up Function
                                                            
  100 00000018 F04F 00C0       ldr              r0, = PORT67
  101 0000001C 6038            str              r0, [r7]
  102 0000001E         
  103 0000001E         ; Configure les PWM + GPIO
  104 0000001E F7FF FFFE       BL               LED_CONFIG_ALL
  105 00000022         ; Config LEDS
  106 00000022 F7FF FFFE       BL               MOTEUR_INIT
  107 00000026 F7FF FFFE       BL               BUMPER_INIT
  108 0000002A         ; Activer les deux moteurs droit et gauche
  109 0000002A         
  110 0000002A F7FF FFFE       BL               MOTEUR_DROIT_OFF
  111 0000002E F7FF FFFE       BL               MOTEUR_GAUCHE_OFF
  112 00000032         
  113 00000032         loop
  114 00000032         
  115 00000032         ; Lire dans R4 l'etat des SW
  116 00000032 4F2D            ldr              r7,= GPIO_PORTD_BASE + (PORT67<
<2)
  117 00000034 683C            ldr              r4, [r7]
  118 00000036         
  119 00000036         ;Test des �tats des switchs
  120 00000036         ; Test de l'�tat de SW2   
  121 00000036 2C80            cmp              r4,#0x80



ARM Macro Assembler    Page 4 


  122 00000038 D002            beq              rotright
  123 0000003A         ; Test l'�tat de SW1   
  124 0000003A 2C40            cmp              r4,#0x40
  125 0000003C D015            beq              rotleft
  126 0000003E E7F8            b                loop
  127 00000040         ;Rotation � droite de l'Evalbot  
  128 00000040         rotright
  129 00000040 F000 F82E       BL               BUMPER_CHECK_GAUCHE
  130 00000044 F000 F827       BL               BUMPER_CHECK_DROIT
  131 00000048 F7FF FFFE       BL               LED_2_ON
  132 0000004C F7FF FFFE       BL               LED_1_OFF
  133 00000050 F7FF FFFE       BL               MOTEUR_DROIT_ON
  134 00000054 F7FF FFFE       BL               MOTEUR_GAUCHE_ON
  135 00000058 F7FF FFFE       BL               MOTEUR_GAUCHE_AVANT
  136 0000005C F7FF FFFE       BL               MOTEUR_DROIT_ARRIERE
  137 00000060         
  138 00000060         ; Lire dans R4 l'etat des SW 
  139 00000060 4F21            ldr              r7,= GPIO_PORTD_BASE + (PORT67<
<2)
  140 00000062 683C            ldr              r4, [r7]
  141 00000064         
  142 00000064         ;Test de l'�tat de SW1
  143 00000064 2C40            cmp              r4,#0x40
  144 00000066 D000            beq              rotleft
  145 00000068 E7EA            b                rotright
  146 0000006A         ; Rotation � gauche de l'Evalbot  
  147 0000006A         rotleft
  148 0000006A F000 F819       BL               BUMPER_CHECK_GAUCHE
  149 0000006E F000 F812       BL               BUMPER_CHECK_DROIT
  150 00000072 F7FF FFFE       BL               LED_1_ON
  151 00000076 F7FF FFFE       BL               LED_2_OFF
  152 0000007A F7FF FFFE       BL               MOTEUR_DROIT_ON
  153 0000007E F7FF FFFE       BL               MOTEUR_GAUCHE_ON
  154 00000082 F7FF FFFE       BL               MOTEUR_DROIT_AVANT
  155 00000086 F7FF FFFE       BL               MOTEUR_GAUCHE_ARRIERE
  156 0000008A         
  157 0000008A 4F17            ldr              r7,= GPIO_PORTD_BASE + (PORT67<
<2)
  158 0000008C         
  159 0000008C         ; Lire dans R4 l'etat des SW
  160 0000008C 683C            ldr              r4, [r7]
  161 0000008E         
  162 0000008E         ;Test de l'�tat de SW2
  163 0000008E         
  164 0000008E 2C80            cmp              r4,#0x80
  165 00000090 D0D6            beq              rotright
  166 00000092         
  167 00000092 E7EA            b                rotleft
  168 00000094 E7CD            b                loop
  169 00000096         
  170 00000096         BUMPER_CHECK_DROIT
  171 00000096         ; Etat du BUMPER DROIT
  172 00000096 4F15            ldr              r7,= GPIO_PORTE_BASE + (PORT0<<
2)
  173 00000098 683D            ldr              r5, [r7]
  174 0000009A         
  175 0000009A 2D01            cmp              r5,#0x01
  176 0000009C D108            BNE              CALL_MOTEUR_RECULER_SHORT
  177 0000009E         



ARM Macro Assembler    Page 5 


  178 0000009E 4770            BX               LR
  179 000000A0         
  180 000000A0         BUMPER_CHECK_GAUCHE
  181 000000A0         ; Etat du BUMPER GAUCHE
  182 000000A0 F8DF 904C       ldr              r9, =  GPIO_PORTE_BASE + (PORT1
<<2)
  183 000000A4 F8D9 A000       ldr              r10, [r9]
  184 000000A8         
  185 000000A8 F1BA 0F02       cmp              r10, #0x02
  186 000000AC D100            BNE              CALL_MOTEUR_RECULER_SHORT
  187 000000AE         
  188 000000AE 4770            BX               LR
  189 000000B0         
  190 000000B0         
  191 000000B0         CALL_MOTEUR_RECULER_SHORT
  192 000000B0 F000 F801       BL               MOTEUR_RECULER_SHORT
  193 000000B4 4770            BX               LR
  194 000000B6         
  195 000000B6         
  196 000000B6         
  197 000000B6         MOTEUR_RECULER_SHORT
  198 000000B6 F7FF FFFE       BL               MOTEUR_DROIT_ON
  199 000000BA F7FF FFFE       BL               MOTEUR_GAUCHE_ON
  200 000000BE F7FF FFFE       BL               MOTEUR_GAUCHE_ARRIERE
  201 000000C2 F7FF FFFE       BL               MOTEUR_DROIT_ARRIERE
  202 000000C6 F7FF FFFE       BL               LED_ALL_ON
  203 000000CA 490A            ldr              r1, =DUREE_SHORT
  204 000000CC E000            b                LOOP_SHORT
  205 000000CE         
  206 000000CE 4770            BX               LR
  207 000000D0         
  208 000000D0         LOOP_SHORT
  209 000000D0 1E49            subs             r1, r1, #1
  210 000000D2 D1FD            bne              LOOP_SHORT
  211 000000D4 F7FF FFFE       BL               LED_ALL_OFF
  212 000000D8 E7C7            B                rotleft
  213 000000DA         
  214 000000DA                 END
              00 00 400FE108 
              4000751C 
              40007510 
              40007300 
              40024004 
              40024008 
              002FFFFF 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\objects\main.d -o.\objects\main.o -I.\RTE\_Target_1 -IC:\Users\c
ypbo\AppData\Local\Arm\Packs\ARM\CMSIS\5.5.1\CMSIS\Core\Include -IC:\Users\cypb
o\AppData\Local\Arm\Packs\ARM\CMSIS\5.5.1\Device\ARM\ARMCM3\Include --predefine
="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 528" --predefine="_RTE_ SE
TA 1" --predefine="ARMCM3 SETA 1" --list=.\listings\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 7 in file main.s
   Uses
      None
Comment: .text unused
BUMPER_CHECK_DROIT 00000096

Symbol: BUMPER_CHECK_DROIT
   Definitions
      At line 170 in file main.s
   Uses
      At line 130 in file main.s
      At line 149 in file main.s

BUMPER_CHECK_GAUCHE 000000A0

Symbol: BUMPER_CHECK_GAUCHE
   Definitions
      At line 180 in file main.s
   Uses
      At line 129 in file main.s
      At line 148 in file main.s

CALL_MOTEUR_RECULER_SHORT 000000B0

Symbol: CALL_MOTEUR_RECULER_SHORT
   Definitions
      At line 191 in file main.s
   Uses
      At line 176 in file main.s
      At line 186 in file main.s

LOOP_SHORT 000000D0

Symbol: LOOP_SHORT
   Definitions
      At line 208 in file main.s
   Uses
      At line 204 in file main.s
      At line 210 in file main.s

MOTEUR_RECULER_SHORT 000000B6

Symbol: MOTEUR_RECULER_SHORT
   Definitions
      At line 197 in file main.s
   Uses
      At line 192 in file main.s
Comment: MOTEUR_RECULER_SHORT used once
__main 00000000

Symbol: __main
   Definitions
      At line 79 in file main.s
   Uses
      At line 9 in file main.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Comment: __main used once
loop 00000032

Symbol: loop
   Definitions
      At line 113 in file main.s
   Uses
      At line 126 in file main.s
      At line 168 in file main.s

rotleft 0000006A

Symbol: rotleft
   Definitions
      At line 147 in file main.s
   Uses
      At line 125 in file main.s
      At line 144 in file main.s
      At line 167 in file main.s
      At line 212 in file main.s

rotright 00000040

Symbol: rotright
   Definitions
      At line 128 in file main.s
   Uses
      At line 122 in file main.s
      At line 145 in file main.s
      At line 165 in file main.s

10 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

DUREE_SHORT 002FFFFF

Symbol: DUREE_SHORT
   Definitions
      At line 77 in file main.s
   Uses
      At line 203 in file main.s
Comment: DUREE_SHORT used once
GPIO_O_DEN 0000051C

Symbol: GPIO_O_DEN
   Definitions
      At line 55 in file main.s
   Uses
      At line 95 in file main.s
Comment: GPIO_O_DEN used once
GPIO_O_PUR 00000510

Symbol: GPIO_O_PUR
   Definitions
      At line 58 in file main.s
   Uses
      At line 99 in file main.s
Comment: GPIO_O_PUR used once
GPIO_PORTD_BASE 40007000

Symbol: GPIO_PORTD_BASE
   Definitions
      At line 46 in file main.s
   Uses
      At line 95 in file main.s
      At line 99 in file main.s
      At line 116 in file main.s
      At line 139 in file main.s
      At line 157 in file main.s

GPIO_PORTE_BASE 40024000

Symbol: GPIO_PORTE_BASE
   Definitions
      At line 47 in file main.s
   Uses
      At line 172 in file main.s
      At line 182 in file main.s

PORT0 00000001

Symbol: PORT0
   Definitions
      At line 69 in file main.s
   Uses
      At line 172 in file main.s
Comment: PORT0 used once
PORT1 00000002

Symbol: PORT1
   Definitions
      At line 73 in file main.s
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

      At line 182 in file main.s
Comment: PORT1 used once
PORT6 00000040

Symbol: PORT6
   Definitions
      At line 63 in file main.s
   Uses
      None
Comment: PORT6 unused
PORT67 000000C0

Symbol: PORT67
   Definitions
      At line 62 in file main.s
   Uses
      At line 96 in file main.s
      At line 100 in file main.s
      At line 116 in file main.s
      At line 139 in file main.s
      At line 157 in file main.s

PORT7 00000080

Symbol: PORT7
   Definitions
      At line 64 in file main.s
   Uses
      None
Comment: PORT7 unused
SYSCTL_PERIPH_GPIOF 400FE108

Symbol: SYSCTL_PERIPH_GPIOF
   Definitions
      At line 41 in file main.s
   Uses
      At line 84 in file main.s
Comment: SYSCTL_PERIPH_GPIOF used once
11 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

BUMPER_INIT 00000000

Symbol: BUMPER_INIT
   Definitions
      At line 26 in file main.s
   Uses
      At line 107 in file main.s
Comment: BUMPER_INIT used once
LED_1_OFF 00000000

Symbol: LED_1_OFF
   Definitions
      At line 32 in file main.s
   Uses
      At line 132 in file main.s
Comment: LED_1_OFF used once
LED_1_ON 00000000

Symbol: LED_1_ON
   Definitions
      At line 29 in file main.s
   Uses
      At line 150 in file main.s
Comment: LED_1_ON used once
LED_2_OFF 00000000

Symbol: LED_2_OFF
   Definitions
      At line 33 in file main.s
   Uses
      At line 151 in file main.s
Comment: LED_2_OFF used once
LED_2_ON 00000000

Symbol: LED_2_ON
   Definitions
      At line 30 in file main.s
   Uses
      At line 131 in file main.s
Comment: LED_2_ON used once
LED_ALL_OFF 00000000

Symbol: LED_ALL_OFF
   Definitions
      At line 34 in file main.s
   Uses
      At line 211 in file main.s
Comment: LED_ALL_OFF used once
LED_ALL_ON 00000000

Symbol: LED_ALL_ON
   Definitions
      At line 31 in file main.s
   Uses
      At line 202 in file main.s
Comment: LED_ALL_ON used once
LED_CONFIG_ALL 00000000

Symbol: LED_CONFIG_ALL



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

   Definitions
      At line 28 in file main.s
   Uses
      At line 104 in file main.s
Comment: LED_CONFIG_ALL used once
MOTEUR_DROIT_ARRIERE 00000000

Symbol: MOTEUR_DROIT_ARRIERE
   Definitions
      At line 17 in file main.s
   Uses
      At line 136 in file main.s
      At line 201 in file main.s

MOTEUR_DROIT_AVANT 00000000

Symbol: MOTEUR_DROIT_AVANT
   Definitions
      At line 16 in file main.s
   Uses
      At line 154 in file main.s
Comment: MOTEUR_DROIT_AVANT used once
MOTEUR_DROIT_INVERSE 00000000

Symbol: MOTEUR_DROIT_INVERSE
   Definitions
      At line 18 in file main.s
   Uses
      None
Comment: MOTEUR_DROIT_INVERSE unused
MOTEUR_DROIT_OFF 00000000

Symbol: MOTEUR_DROIT_OFF
   Definitions
      At line 15 in file main.s
   Uses
      At line 110 in file main.s
Comment: MOTEUR_DROIT_OFF used once
MOTEUR_DROIT_ON 00000000

Symbol: MOTEUR_DROIT_ON
   Definitions
      At line 14 in file main.s
   Uses
      At line 133 in file main.s
      At line 152 in file main.s
      At line 198 in file main.s

MOTEUR_GAUCHE_ARRIERE 00000000

Symbol: MOTEUR_GAUCHE_ARRIERE
   Definitions
      At line 23 in file main.s
   Uses
      At line 155 in file main.s
      At line 200 in file main.s

MOTEUR_GAUCHE_AVANT 00000000




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
External symbols

Symbol: MOTEUR_GAUCHE_AVANT
   Definitions
      At line 22 in file main.s
   Uses
      At line 135 in file main.s
Comment: MOTEUR_GAUCHE_AVANT used once
MOTEUR_GAUCHE_INVERSE 00000000

Symbol: MOTEUR_GAUCHE_INVERSE
   Definitions
      At line 24 in file main.s
   Uses
      None
Comment: MOTEUR_GAUCHE_INVERSE unused
MOTEUR_GAUCHE_OFF 00000000

Symbol: MOTEUR_GAUCHE_OFF
   Definitions
      At line 21 in file main.s
   Uses
      At line 111 in file main.s
Comment: MOTEUR_GAUCHE_OFF used once
MOTEUR_GAUCHE_ON 00000000

Symbol: MOTEUR_GAUCHE_ON
   Definitions
      At line 20 in file main.s
   Uses
      At line 134 in file main.s
      At line 153 in file main.s
      At line 199 in file main.s

MOTEUR_INIT 00000000

Symbol: MOTEUR_INIT
   Definitions
      At line 12 in file main.s
   Uses
      At line 106 in file main.s
Comment: MOTEUR_INIT used once
19 symbols
376 symbols in table
