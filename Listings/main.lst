


ARM Macro Assembler    Page 1 


    1 00000000         ; Evalbot (Cortex M3 de Texas Instrument)
    2 00000000         ; programme - Exercice 2.1 : un appui sur SW1 met le Rob
                       ot ;EVALBOT 
    3 00000000         ; en rotation sur lui-m�me dans un sens donn�,
    4 00000000         ; un appui sur SW2 inverse le sens de rotation
    5 00000000         ; du robot et vice versa.
    6 00000000         
    7 00000000                 AREA             |.text|, CODE, READONLY
    8 00000000                 ENTRY
    9 00000000                 EXPORT           __main
   10 00000000                 EXPORT           rotleft
   11 00000000                 EXPORT           rotright
   12 00000000         
   13 00000000         ;; The IMPORT command specifies that a symbol is defined
                        in a shared object at runtime.
   14 00000000                 IMPORT           MOTEUR_INIT ; initialise les mo
                                                            teurs (configure le
                                                            s pwms + GPIO)
   15 00000000         
   16 00000000                 IMPORT           MOTEUR_DROIT_ON ; activer le mo
                                                            teur droit
   17 00000000                 IMPORT           MOTEUR_DROIT_OFF ; d�activer 
                                                            le moteur droit
   18 00000000                 IMPORT           MOTEUR_DROIT_AVANT ; moteur dro
                                                            it tourne vers l'av
                                                            ant
   19 00000000                 IMPORT           MOTEUR_DROIT_ARRIERE ; moteur d
                                                            roit tourne vers l'
                                                            arri�re
   20 00000000                 IMPORT           MOTEUR_DROIT_INVERSE ; inverse 
                                                            le sens de rotation
                                                             du moteur droit
   21 00000000         
   22 00000000                 IMPORT           MOTEUR_GAUCHE_ON ; activer le m
                                                            oteur gauche
   23 00000000                 IMPORT           MOTEUR_GAUCHE_OFF ; d�activer
                                                             le moteur gauche
   24 00000000                 IMPORT           MOTEUR_GAUCHE_AVANT ; moteur ga
                                                            uche tourne vers l'
                                                            avant
   25 00000000                 IMPORT           MOTEUR_GAUCHE_ARRIERE ; moteur 
                                                            gauche tourne vers 
                                                            l'arri�re
   26 00000000                 IMPORT           MOTEUR_GAUCHE_INVERSE ; inverse
                                                             le sens de rotatio
                                                            n du moteur gauche
   27 00000000         
   28 00000000                 IMPORT           BUMPER_INIT
   29 00000000         
   30 00000000                 IMPORT           LED_CONFIG_ALL
   31 00000000                 IMPORT           LED_1_ON
   32 00000000                 IMPORT           LED_2_ON
   33 00000000                 IMPORT           LED_ALL_ON
   34 00000000                 IMPORT           LED_1_OFF
   35 00000000                 IMPORT           LED_2_OFF
   36 00000000                 IMPORT           LED_ALL_OFF
   37 00000000                 IMPORT           BUMPER_CHECK_DROIT
   38 00000000                 IMPORT           BUMPER_CHECK_GAUCHE
   39 00000000         



ARM Macro Assembler    Page 2 


   40 00000000         
   41 00000000         ; This register controls the clock gating logic in norma
                       l Run mode
   42 00000000         ; SYSCTL_RCGC2_R (p291 datasheet de lm3s9b92.pdf
   43 00000000         
   44 00000000 400FE108 
                       SYSCTL_PERIPH_GPIOF
                               EQU              0x400FE108
   45 00000000         
   46 00000000         ; The GPIODATA register is the data register
   47 00000000         ; GPIO Port D (APB) base: 0x4002.5000 (p416 datasheet de
                        lm3s9B92.pdf
   48 00000000         
   49 00000000 40007000 
                       GPIO_PORTD_BASE
                               EQU              0x40007000  ;pour les SW (PORT 
                                                            D)
   50 00000000 40024000 
                       GPIO_PORTE_BASE
                               EQU              0x40024000  ;pour les BUMPER
   51 00000000         
   52 00000000         
   53 00000000         
   54 00000000         ; Digital enable register
   55 00000000         ; To use the pin as a digital input or output, the corre
                       sponding GPIODEN bit must be set.
   56 00000000         ; GPIO Digital Enable (p437 datasheet de lm3s9B92.pdf)
   57 00000000         
   58 00000000 0000051C 
                       GPIO_O_DEN
                               EQU              0x0000051C
   59 00000000         
   60 00000000         ; Pull up Register (for SW or BUMP)
   61 00000000 00000510 
                       GPIO_O_PUR
                               EQU              0x00000510
   62 00000000         
   63 00000000         ; Port select
   64 00000000         
   65 00000000 000000C0 
                       PORT67  EQU              0xC0        ; SW 1 et 2 - Ligne
                                                            s 6 et 7 Port D
   66 00000000 00000040 
                       PORT6   EQU              0x40        ; SW 1  - Lignes 6 
                                                            Port D
   67 00000000 00000080 
                       PORT7   EQU              0x80        ; SW 2  - Lignes 7 
                                                            Port D
   68 00000000         
   69 00000000         
   70 00000000         ; PORT E : selection du BUMPER DROIT, LIGNE 0 du Port E
   71 00000000         
   72 00000000 00000001 
                       PORT0   EQU              0x01
   73 00000000         
   74 00000000         ; PORT E : selection du BUMPER DROIT, LIGNE 1 du Port E
   75 00000000         
   76 00000000 00000002 
                       PORT1   EQU              0x02



ARM Macro Assembler    Page 3 


   77 00000000         
   78 00000000         
   79 00000000         
   80 00000000         
   81 00000000         __main
   82 00000000         
   83 00000000         ; Enable the Port D,E and F peripheral clock by setting 
                       bit 3,4,5 (0x38 == 0b111000)  
   84 00000000         ;(p291 datasheet de lm3s9B96.pdf), (GPIO::FEDCBA)
   85 00000000         
   86 00000000 4E21            ldr              r6, = SYSCTL_PERIPH_GPIOF 
                                                            ;; RCGC2
   87 00000002 F04F 0038       mov              r0, #0x00000038 ;; Enable clock
                                                             sur GPIO D = SW 
   88 00000006 6030            str              r0, [r6]
   89 00000008         
   90 00000008         ;"There must be a delay of 3 system clocks before any GP
                       IO reg. access  (p413 datasheet de lm3s9B92.pdf)
   91 00000008         ;tres tres important....;; pas necessaire en simu ou en 
                       debbug step by step...
   92 00000008 BF00            nop
   93 0000000A BF00            nop
   94 0000000C BF00            nop
   95 0000000E         
   96 0000000E         ;Configuration des switchs : SW1 et SW2
   97 0000000E 4F1F            ldr              r7, = GPIO_PORTD_BASE+GPIO_O_DE
N 
                                                            ;; Enable Digital F
                                                            unction 
   98 00000010 F04F 00C0       ldr              r0, = PORT67
   99 00000014 6038            str              r0, [r7]
  100 00000016         
  101 00000016 4F1E            ldr              r7, = GPIO_PORTD_BASE+GPIO_O_PU
R 
                                                            ;; Pull Up Function
                                                            
  102 00000018 F04F 00C0       ldr              r0, = PORT67
  103 0000001C 6038            str              r0, [r7]
  104 0000001E         
  105 0000001E         ; Configure les PWM + GPIO
  106 0000001E F7FF FFFE       BL               LED_CONFIG_ALL
  107 00000022         ; Config LEDS
  108 00000022 F7FF FFFE       BL               MOTEUR_INIT
  109 00000026 F7FF FFFE       BL               BUMPER_INIT
  110 0000002A         ; Activer les deux moteurs droit et gauche
  111 0000002A         
  112 0000002A F7FF FFFE       BL               MOTEUR_DROIT_OFF
  113 0000002E F7FF FFFE       BL               MOTEUR_GAUCHE_OFF
  114 00000032         
  115 00000032         INITIAL_STATE
  116 00000032 F000 F822       bl               HANDLE_SWITCH_PRESS
  117 00000036 E7FC            b                INITIAL_STATE
  118 00000038         
  119 00000038         rotright
  120 00000038 F7FF FFFE       BL               LED_1_ON
  121 0000003C F7FF FFFE       BL               LED_2_OFF
  122 00000040 F7FF FFFE       BL               MOTEUR_DROIT_ON
  123 00000044 F7FF FFFE       BL               MOTEUR_GAUCHE_ON
  124 00000048 F7FF FFFE       BL               MOTEUR_GAUCHE_AVANT



ARM Macro Assembler    Page 4 


  125 0000004C F7FF FFFE       BL               MOTEUR_DROIT_ARRIERE
  126 00000050         
  127 00000050 E00C            b                LOOP
  128 00000052         
  129 00000052         rotleft
  130 00000052 F7FF FFFE       BL               LED_2_ON
  131 00000056 F7FF FFFE       BL               LED_1_OFF
  132 0000005A F7FF FFFE       BL               MOTEUR_DROIT_ON
  133 0000005E F7FF FFFE       BL               MOTEUR_GAUCHE_ON
  134 00000062 F7FF FFFE       BL               MOTEUR_DROIT_AVANT
  135 00000066 F7FF FFFE       BL               MOTEUR_GAUCHE_ARRIERE
  136 0000006A E7FF            b                LOOP
  137 0000006C         
  138 0000006C         
  139 0000006C         
  140 0000006C         LOOP
  141 0000006C F7FF FFFE       BL               BUMPER_CHECK_GAUCHE
  142 00000070 F7FF FFFE       BL               BUMPER_CHECK_DROIT
  143 00000074 F000 F801       BL               HANDLE_SWITCH_PRESS
  144 00000078 E7F8            B                LOOP
  145 0000007A         
  146 0000007A         
  147 0000007A         
  148 0000007A         HANDLE_SWITCH_PRESS
  149 0000007A 4F06            ldr              r7,= GPIO_PORTD_BASE + (PORT67<
<2)
  150 0000007C 683C            ldr              r4, [r7]
  151 0000007E 2C80            cmp              r4,#0x80
  152 00000080 D0FE            beq              rotright
  153 00000082 2C40            cmp              r4,#0x40
  154 00000084 D0FE            beq              rotleft
  155 00000086 4770            bx               lr
  156 00000088         
  157 00000088         
  158 00000088         
  159 00000088                 END
              400FE108 
              4000751C 
              40007510 
              40007300 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\objects\main.d -o.\objects\main.o -I.\RTE\_Target_1 -IC:\Users\c
ypbo\AppData\Local\Arm\Packs\ARM\CMSIS\5.5.1\CMSIS\Core\Include -IC:\Users\cypb
o\AppData\Local\Arm\Packs\ARM\CMSIS\5.5.1\Device\ARM\ARMCM3\Include --predefine
="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 528" --predefine="_RTE_ SE
TA 1" --predefine="ARMCM3 SETA 1" --list=.\listings\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 7 in file main.s
   Uses
      None
Comment: .text unused
HANDLE_SWITCH_PRESS 0000007A

Symbol: HANDLE_SWITCH_PRESS
   Definitions
      At line 148 in file main.s
   Uses
      At line 116 in file main.s
      At line 143 in file main.s

INITIAL_STATE 00000032

Symbol: INITIAL_STATE
   Definitions
      At line 115 in file main.s
   Uses
      At line 117 in file main.s
Comment: INITIAL_STATE used once
LOOP 0000006C

Symbol: LOOP
   Definitions
      At line 140 in file main.s
   Uses
      At line 127 in file main.s
      At line 136 in file main.s
      At line 144 in file main.s

__main 00000000

Symbol: __main
   Definitions
      At line 81 in file main.s
   Uses
      At line 9 in file main.s
Comment: __main used once
rotleft 00000052

Symbol: rotleft
   Definitions
      At line 129 in file main.s
   Uses
      At line 10 in file main.s
      At line 154 in file main.s

rotright 00000038

Symbol: rotright
   Definitions
      At line 119 in file main.s
   Uses
      At line 11 in file main.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 152 in file main.s

7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_O_DEN 0000051C

Symbol: GPIO_O_DEN
   Definitions
      At line 58 in file main.s
   Uses
      At line 97 in file main.s
Comment: GPIO_O_DEN used once
GPIO_O_PUR 00000510

Symbol: GPIO_O_PUR
   Definitions
      At line 61 in file main.s
   Uses
      At line 101 in file main.s
Comment: GPIO_O_PUR used once
GPIO_PORTD_BASE 40007000

Symbol: GPIO_PORTD_BASE
   Definitions
      At line 49 in file main.s
   Uses
      At line 97 in file main.s
      At line 101 in file main.s
      At line 149 in file main.s

GPIO_PORTE_BASE 40024000

Symbol: GPIO_PORTE_BASE
   Definitions
      At line 50 in file main.s
   Uses
      None
Comment: GPIO_PORTE_BASE unused
PORT0 00000001

Symbol: PORT0
   Definitions
      At line 72 in file main.s
   Uses
      None
Comment: PORT0 unused
PORT1 00000002

Symbol: PORT1
   Definitions
      At line 76 in file main.s
   Uses
      None
Comment: PORT1 unused
PORT6 00000040

Symbol: PORT6
   Definitions
      At line 66 in file main.s
   Uses
      None
Comment: PORT6 unused
PORT67 000000C0



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols


Symbol: PORT67
   Definitions
      At line 65 in file main.s
   Uses
      At line 98 in file main.s
      At line 102 in file main.s
      At line 149 in file main.s

PORT7 00000080

Symbol: PORT7
   Definitions
      At line 67 in file main.s
   Uses
      None
Comment: PORT7 unused
SYSCTL_PERIPH_GPIOF 400FE108

Symbol: SYSCTL_PERIPH_GPIOF
   Definitions
      At line 44 in file main.s
   Uses
      At line 86 in file main.s
Comment: SYSCTL_PERIPH_GPIOF used once
10 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

BUMPER_CHECK_DROIT 00000000

Symbol: BUMPER_CHECK_DROIT
   Definitions
      At line 37 in file main.s
   Uses
      At line 142 in file main.s
Comment: BUMPER_CHECK_DROIT used once
BUMPER_CHECK_GAUCHE 00000000

Symbol: BUMPER_CHECK_GAUCHE
   Definitions
      At line 38 in file main.s
   Uses
      At line 141 in file main.s
Comment: BUMPER_CHECK_GAUCHE used once
BUMPER_INIT 00000000

Symbol: BUMPER_INIT
   Definitions
      At line 28 in file main.s
   Uses
      At line 109 in file main.s
Comment: BUMPER_INIT used once
LED_1_OFF 00000000

Symbol: LED_1_OFF
   Definitions
      At line 34 in file main.s
   Uses
      At line 131 in file main.s
Comment: LED_1_OFF used once
LED_1_ON 00000000

Symbol: LED_1_ON
   Definitions
      At line 31 in file main.s
   Uses
      At line 120 in file main.s
Comment: LED_1_ON used once
LED_2_OFF 00000000

Symbol: LED_2_OFF
   Definitions
      At line 35 in file main.s
   Uses
      At line 121 in file main.s
Comment: LED_2_OFF used once
LED_2_ON 00000000

Symbol: LED_2_ON
   Definitions
      At line 32 in file main.s
   Uses
      At line 130 in file main.s
Comment: LED_2_ON used once
LED_ALL_OFF 00000000

Symbol: LED_ALL_OFF



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

   Definitions
      At line 36 in file main.s
   Uses
      None
Comment: LED_ALL_OFF unused
LED_ALL_ON 00000000

Symbol: LED_ALL_ON
   Definitions
      At line 33 in file main.s
   Uses
      None
Comment: LED_ALL_ON unused
LED_CONFIG_ALL 00000000

Symbol: LED_CONFIG_ALL
   Definitions
      At line 30 in file main.s
   Uses
      At line 106 in file main.s
Comment: LED_CONFIG_ALL used once
MOTEUR_DROIT_ARRIERE 00000000

Symbol: MOTEUR_DROIT_ARRIERE
   Definitions
      At line 19 in file main.s
   Uses
      At line 125 in file main.s
Comment: MOTEUR_DROIT_ARRIERE used once
MOTEUR_DROIT_AVANT 00000000

Symbol: MOTEUR_DROIT_AVANT
   Definitions
      At line 18 in file main.s
   Uses
      At line 134 in file main.s
Comment: MOTEUR_DROIT_AVANT used once
MOTEUR_DROIT_INVERSE 00000000

Symbol: MOTEUR_DROIT_INVERSE
   Definitions
      At line 20 in file main.s
   Uses
      None
Comment: MOTEUR_DROIT_INVERSE unused
MOTEUR_DROIT_OFF 00000000

Symbol: MOTEUR_DROIT_OFF
   Definitions
      At line 17 in file main.s
   Uses
      At line 112 in file main.s
Comment: MOTEUR_DROIT_OFF used once
MOTEUR_DROIT_ON 00000000

Symbol: MOTEUR_DROIT_ON
   Definitions
      At line 16 in file main.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
External symbols

      At line 122 in file main.s
      At line 132 in file main.s

MOTEUR_GAUCHE_ARRIERE 00000000

Symbol: MOTEUR_GAUCHE_ARRIERE
   Definitions
      At line 25 in file main.s
   Uses
      At line 135 in file main.s
Comment: MOTEUR_GAUCHE_ARRIERE used once
MOTEUR_GAUCHE_AVANT 00000000

Symbol: MOTEUR_GAUCHE_AVANT
   Definitions
      At line 24 in file main.s
   Uses
      At line 124 in file main.s
Comment: MOTEUR_GAUCHE_AVANT used once
MOTEUR_GAUCHE_INVERSE 00000000

Symbol: MOTEUR_GAUCHE_INVERSE
   Definitions
      At line 26 in file main.s
   Uses
      None
Comment: MOTEUR_GAUCHE_INVERSE unused
MOTEUR_GAUCHE_OFF 00000000

Symbol: MOTEUR_GAUCHE_OFF
   Definitions
      At line 23 in file main.s
   Uses
      At line 113 in file main.s
Comment: MOTEUR_GAUCHE_OFF used once
MOTEUR_GAUCHE_ON 00000000

Symbol: MOTEUR_GAUCHE_ON
   Definitions
      At line 22 in file main.s
   Uses
      At line 123 in file main.s
      At line 133 in file main.s

MOTEUR_INIT 00000000

Symbol: MOTEUR_INIT
   Definitions
      At line 14 in file main.s
   Uses
      At line 108 in file main.s
Comment: MOTEUR_INIT used once
21 symbols
374 symbols in table
