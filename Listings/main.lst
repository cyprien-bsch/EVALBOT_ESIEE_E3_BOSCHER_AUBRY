


ARM Macro Assembler    Page 1 


    1 00000000         ; Evalbot (Cortex M3 de Texas Instrument)
    2 00000000         ; programme - Exercice 2.1 : un appui sur SW1 met le Rob
                       ot ;EVALBOT 
    3 00000000         ; en rotation sur lui-m�me dans un sens donn�,
    4 00000000         ; un appui sur SW2 inverse le sens de rotation
    5 00000000         ; du robot et vice versa.
    6 00000000         
    7 00000000                 AREA             |.text|, CODE, READONLY
    8 00000000                 ENTRY
    9 00000000                 EXPORT           __main
   10 00000000         
   11 00000000         ;; The IMPORT command specifies that a symbol is defined
                        in a shared object at runtime.
   12 00000000                 IMPORT           MOTEUR_INIT ; initialise les mo
                                                            teurs (configure le
                                                            s pwms + GPIO)
   13 00000000         
   14 00000000                 IMPORT           MOTEUR_DROIT_ON ; activer le mo
                                                            teur droit
   15 00000000                 IMPORT           MOTEUR_DROIT_OFF ; d�activer 
                                                            le moteur droit
   16 00000000                 IMPORT           MOTEUR_DROIT_AVANT ; moteur dro
                                                            it tourne vers l'av
                                                            ant
   17 00000000                 IMPORT           MOTEUR_DROIT_ARRIERE ; moteur d
                                                            roit tourne vers l'
                                                            arri�re
   18 00000000                 IMPORT           MOTEUR_DROIT_INVERSE ; inverse 
                                                            le sens de rotation
                                                             du moteur droit
   19 00000000         
   20 00000000                 IMPORT           MOTEUR_GAUCHE_ON ; activer le m
                                                            oteur gauche
   21 00000000                 IMPORT           MOTEUR_GAUCHE_OFF ; d�activer
                                                             le moteur gauche
   22 00000000                 IMPORT           MOTEUR_GAUCHE_AVANT ; moteur ga
                                                            uche tourne vers l'
                                                            avant
   23 00000000                 IMPORT           MOTEUR_GAUCHE_ARRIERE ; moteur 
                                                            gauche tourne vers 
                                                            l'arri�re
   24 00000000                 IMPORT           MOTEUR_GAUCHE_INVERSE ; inverse
                                                             le sens de rotatio
                                                            n du moteur gauche
   25 00000000         
   26 00000000         ; This register controls the clock gating logic in norma
                       l Run mode
   27 00000000         ; SYSCTL_RCGC2_R (p291 datasheet de lm3s9b92.pdf
   28 00000000         
   29 00000000 400FE108 
                       SYSCTL_PERIPH_GPIOF
                               EQU              0x400FE108
   30 00000000         
   31 00000000         ; The GPIODATA register is the data register
   32 00000000         ; GPIO Port D (APB) base: 0x4002.5000 (p416 datasheet de
                        lm3s9B92.pdf
   33 00000000         
   34 00000000 40007000 
                       GPIO_PORTD_BASE



ARM Macro Assembler    Page 2 


                               EQU              0x40007000  ;pour les SW (PORT 
                                                            D)
   35 00000000         
   36 00000000         
   37 00000000         
   38 00000000         ; Digital enable register
   39 00000000         ; To use the pin as a digital input or output, the corre
                       sponding GPIODEN bit must be set.
   40 00000000         ; GPIO Digital Enable (p437 datasheet de lm3s9B92.pdf)
   41 00000000         
   42 00000000 0000051C 
                       GPIO_O_DEN
                               EQU              0x0000051C
   43 00000000         
   44 00000000         ; Pull up Register (for SW or BUMP)
   45 00000000 00000510 
                       GPIO_O_PUR
                               EQU              0x00000510
   46 00000000         
   47 00000000         ; Port select
   48 00000000         
   49 00000000 000000C0 
                       PORT67  EQU              0xC0        ; SW 1 et 2 - Ligne
                                                            s 6 et 7 Port D
   50 00000000 00000040 
                       PORT6   EQU              0x40        ; SW 1  - Lignes 6 
                                                            Port D
   51 00000000 00000080 
                       PORT7   EQU              0x80        ; SW 2  - Lignes 7 
                                                            Port D
   52 00000000         
   53 00000000         
   54 00000000         
   55 00000000         __main
   56 00000000         
   57 00000000         ; Enable the Port D,E and F peripheral clock by setting 
                       bit 3,4,5 (0x38 == 0b111000)  
   58 00000000         ;(p291 datasheet de lm3s9B96.pdf), (GPIO::FEDCBA)
   59 00000000         
   60 00000000 4E1B            ldr              r6, = SYSCTL_PERIPH_GPIOF 
                                                            ;; RCGC2
   61 00000002 F04F 0008       mov              r0, #0x00000008 ;; Enable clock
                                                             sur GPIO D = SW 
   62 00000006 6030            str              r0, [r6]
   63 00000008         
   64 00000008         ;"There must be a delay of 3 system clocks before any GP
                       IO reg. access  (p413 datasheet de lm3s9B92.pdf)
   65 00000008         ;tres tres important....;; pas necessaire en simu ou en 
                       debbug step by step...
   66 00000008 BF00            nop
   67 0000000A BF00            nop
   68 0000000C BF00            nop
   69 0000000E         
   70 0000000E         ;Configuration des switchs : SW1 et SW2
   71 0000000E 4F19            ldr              r7, = GPIO_PORTD_BASE+GPIO_O_DE
N 
                                                            ;; Enable Digital F
                                                            unction 
   72 00000010 F04F 00C0       ldr              r0, = PORT67



ARM Macro Assembler    Page 3 


   73 00000014 6038            str              r0, [r7]
   74 00000016         
   75 00000016 4F18            ldr              r7, = GPIO_PORTD_BASE+GPIO_O_PU
R 
                                                            ;; Pull Up Function
                                                            
   76 00000018 F04F 00C0       ldr              r0, = PORT67
   77 0000001C 6038            str              r0, [r7]
   78 0000001E         
   79 0000001E         ; Configure les PWM + GPIO
   80 0000001E         
   81 0000001E F7FF FFFE       BL               MOTEUR_INIT
   82 00000022         
   83 00000022         ; Activer les deux moteurs droit et gauche
   84 00000022         
   85 00000022 F7FF FFFE       BL               MOTEUR_DROIT_OFF
   86 00000026 F7FF FFFE       BL               MOTEUR_GAUCHE_OFF
   87 0000002A         
   88 0000002A         loop
   89 0000002A         ; Lire dans R4 l'etat des SW
   90 0000002A 4F14            ldr              r7,= GPIO_PORTD_BASE + (PORT67<
<2)
   91 0000002C 683C            ldr              r4, [r7]
   92 0000002E         
   93 0000002E         ;Test des �tats des switchs
   94 0000002E         ; Test de l'�tat de SW2   
   95 0000002E 2C80            cmp              r4,#0x80
   96 00000030 D002            beq              rotright
   97 00000032         ; Test l'�tat de SW1   
   98 00000032 2C40            cmp              r4,#0x40
   99 00000034 D00D            beq              rotleft
  100 00000036 E7F8            b                loop
  101 00000038         ;Rotation � droite de l'Evalbot  
  102 00000038         rotright
  103 00000038 F7FF FFFE       BL               MOTEUR_DROIT_ON
  104 0000003C F7FF FFFE       BL               MOTEUR_GAUCHE_ON
  105 00000040 F7FF FFFE       BL               MOTEUR_GAUCHE_AVANT
  106 00000044 F7FF FFFE       BL               MOTEUR_DROIT_ARRIERE
  107 00000048         
  108 00000048         ; Lire dans R4 l'etat des SW 
  109 00000048 4F0C            ldr              r7,= GPIO_PORTD_BASE + (PORT67<
<2)
  110 0000004A 683C            ldr              r4, [r7]
  111 0000004C         
  112 0000004C         ;Test de l'�tat de SW1
  113 0000004C 2C40            cmp              r4,#0x40
  114 0000004E D000            beq              rotleft
  115 00000050 E7F2            b                rotright
  116 00000052         ; Rotation � gauche de l'Evalbot  
  117 00000052         rotleft
  118 00000052 F7FF FFFE       BL               MOTEUR_DROIT_ON
  119 00000056 F7FF FFFE       BL               MOTEUR_GAUCHE_ON
  120 0000005A F7FF FFFE       BL               MOTEUR_DROIT_AVANT
  121 0000005E F7FF FFFE       BL               MOTEUR_GAUCHE_ARRIERE
  122 00000062         
  123 00000062 4F06            ldr              r7,= GPIO_PORTD_BASE + (PORT67<
<2)
  124 00000064         
  125 00000064         ; Lire dans R4 l'etat des SW



ARM Macro Assembler    Page 4 


  126 00000064 683C            ldr              r4, [r7]
  127 00000066         
  128 00000066         ;Test de l'�tat de SW2
  129 00000066         
  130 00000066 2C80            cmp              r4,#0x80
  131 00000068 D0E6            beq              rotright
  132 0000006A         
  133 0000006A E7F2            b                rotleft
  134 0000006C E7DD            b                loop
  135 0000006E                 END
              00 00 400FE108 
              4000751C 
              40007510 
              40007300 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\objects\main.d -o.\objects\main.o -I.\RTE\_Target_1 -IC:\Users\c
ypbo\AppData\Local\Arm\Packs\ARM\CMSIS\5.5.1\CMSIS\Core\Include -IC:\Users\cypb
o\AppData\Local\Arm\Packs\ARM\CMSIS\5.5.1\Device\ARM\ARMCM3\Include --predefine
="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 528" --predefine="_RTE_ SE
TA 1" --predefine="ARMCM3 SETA 1" --list=.\listings\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 7 in file main.s
   Uses
      None
Comment: .text unused
__main 00000000

Symbol: __main
   Definitions
      At line 55 in file main.s
   Uses
      At line 9 in file main.s
Comment: __main used once
loop 0000002A

Symbol: loop
   Definitions
      At line 88 in file main.s
   Uses
      At line 100 in file main.s
      At line 134 in file main.s

rotleft 00000052

Symbol: rotleft
   Definitions
      At line 117 in file main.s
   Uses
      At line 99 in file main.s
      At line 114 in file main.s
      At line 133 in file main.s

rotright 00000038

Symbol: rotright
   Definitions
      At line 102 in file main.s
   Uses
      At line 96 in file main.s
      At line 115 in file main.s
      At line 131 in file main.s

5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_O_DEN 0000051C

Symbol: GPIO_O_DEN
   Definitions
      At line 42 in file main.s
   Uses
      At line 71 in file main.s
Comment: GPIO_O_DEN used once
GPIO_O_PUR 00000510

Symbol: GPIO_O_PUR
   Definitions
      At line 45 in file main.s
   Uses
      At line 75 in file main.s
Comment: GPIO_O_PUR used once
GPIO_PORTD_BASE 40007000

Symbol: GPIO_PORTD_BASE
   Definitions
      At line 34 in file main.s
   Uses
      At line 71 in file main.s
      At line 75 in file main.s
      At line 90 in file main.s
      At line 109 in file main.s
      At line 123 in file main.s

PORT6 00000040

Symbol: PORT6
   Definitions
      At line 50 in file main.s
   Uses
      None
Comment: PORT6 unused
PORT67 000000C0

Symbol: PORT67
   Definitions
      At line 49 in file main.s
   Uses
      At line 72 in file main.s
      At line 76 in file main.s
      At line 90 in file main.s
      At line 109 in file main.s
      At line 123 in file main.s

PORT7 00000080

Symbol: PORT7
   Definitions
      At line 51 in file main.s
   Uses
      None
Comment: PORT7 unused
SYSCTL_PERIPH_GPIOF 400FE108

Symbol: SYSCTL_PERIPH_GPIOF



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 29 in file main.s
   Uses
      At line 60 in file main.s
Comment: SYSCTL_PERIPH_GPIOF used once
7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

MOTEUR_DROIT_ARRIERE 00000000

Symbol: MOTEUR_DROIT_ARRIERE
   Definitions
      At line 17 in file main.s
   Uses
      At line 106 in file main.s
Comment: MOTEUR_DROIT_ARRIERE used once
MOTEUR_DROIT_AVANT 00000000

Symbol: MOTEUR_DROIT_AVANT
   Definitions
      At line 16 in file main.s
   Uses
      At line 120 in file main.s
Comment: MOTEUR_DROIT_AVANT used once
MOTEUR_DROIT_INVERSE 00000000

Symbol: MOTEUR_DROIT_INVERSE
   Definitions
      At line 18 in file main.s
   Uses
      None
Comment: MOTEUR_DROIT_INVERSE unused
MOTEUR_DROIT_OFF 00000000

Symbol: MOTEUR_DROIT_OFF
   Definitions
      At line 15 in file main.s
   Uses
      At line 85 in file main.s
Comment: MOTEUR_DROIT_OFF used once
MOTEUR_DROIT_ON 00000000

Symbol: MOTEUR_DROIT_ON
   Definitions
      At line 14 in file main.s
   Uses
      At line 103 in file main.s
      At line 118 in file main.s

MOTEUR_GAUCHE_ARRIERE 00000000

Symbol: MOTEUR_GAUCHE_ARRIERE
   Definitions
      At line 23 in file main.s
   Uses
      At line 121 in file main.s
Comment: MOTEUR_GAUCHE_ARRIERE used once
MOTEUR_GAUCHE_AVANT 00000000

Symbol: MOTEUR_GAUCHE_AVANT
   Definitions
      At line 22 in file main.s
   Uses
      At line 105 in file main.s
Comment: MOTEUR_GAUCHE_AVANT used once
MOTEUR_GAUCHE_INVERSE 00000000




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

Symbol: MOTEUR_GAUCHE_INVERSE
   Definitions
      At line 24 in file main.s
   Uses
      None
Comment: MOTEUR_GAUCHE_INVERSE unused
MOTEUR_GAUCHE_OFF 00000000

Symbol: MOTEUR_GAUCHE_OFF
   Definitions
      At line 21 in file main.s
   Uses
      At line 86 in file main.s
Comment: MOTEUR_GAUCHE_OFF used once
MOTEUR_GAUCHE_ON 00000000

Symbol: MOTEUR_GAUCHE_ON
   Definitions
      At line 20 in file main.s
   Uses
      At line 104 in file main.s
      At line 119 in file main.s

MOTEUR_INIT 00000000

Symbol: MOTEUR_INIT
   Definitions
      At line 12 in file main.s
   Uses
      At line 81 in file main.s
Comment: MOTEUR_INIT used once
11 symbols
359 symbols in table
