


ARM Macro Assembler    Page 1 


    1 00000000         
    2 00000000         
    3 00000000         
    4 00000000         ; The GPIODATA register is the data register
    5 00000000         ; GPIO Port F (APB) base: 0x4002.5000 (p416 datasheet de
                        ;lm3s9B92.pdf
    6 00000000         
    7 00000000 40024000 
                       GPIO_PORTE_BASE
                               EQU              0x40024000
    8 00000000         
    9 00000000         
   10 00000000         ; configure the corresponding pin to be an output
   11 00000000         ; all GPIO pins are inputs by default
   12 00000000         ; GPIO Direction (p417 datasheet de lm3s9B92.pdf
   13 00000000         
   14 00000000 00000400 
                       GPIO_O_DIR
                               EQU              0x400
   15 00000000         
   16 00000000         ; The GPIODR2R register is the 2-mA drive control regist
                       er
   17 00000000         ; By default, all GPIO pins have 2-mA drive.
   18 00000000         ; GPIO 2-mA Drive Select (p428 datasheet de lm3s9B92.pdf
                       )
   19 00000000         
   20 00000000 00000500 
                       GPIO_O_DR2R
                               EQU              0x500
   21 00000000         
   22 00000000         ; Digital enable register
   23 00000000         ; To use the pin as a digital input or output, the ;corr
                       esponding GPIODEN bit must be set.
   24 00000000         ; GPIO Digital Enable (p437 datasheet de lm3s9B92.pdf)
   25 00000000         
   26 00000000 0000051C 
                       GPIO_O_DEN
                               EQU              0x51C
   27 00000000         
   28 00000000         ; Registre pour activer les switchs  en logiciel (par d√
                       ©faut ;ils sont reli√©s √† la masse donc inactifs)
   29 00000000         
   30 00000000 00000510 
                       GPIO_PUR
                               EQU              0x510
   31 00000000         
   32 00000000         ; PORT E : selection des BUMPER GAUCHE et DROIT,LIGNE 01
                        du Port E
   33 00000000         
   34 00000000 00000003 
                       PORT01  EQU              0x03
   35 00000000         
   36 00000000         ; PORT E : selection du BUMPER DROIT, LIGNE 0 du Port E
   37 00000000         
   38 00000000 00000001 
                       PORT0   EQU              0x01
   39 00000000         
   40 00000000         ; PORT E : selection du BUMPER DROIT, LIGNE 1 du Port E
   41 00000000         



ARM Macro Assembler    Page 2 


   42 00000000 00000002 
                       PORT1   EQU              0x02
   43 00000000         
   44 00000000         
   45 00000000 000FFFFF 
                       DELAY   EQU              0x000FFFFF
   46 00000000         
   47 00000000         
   48 00000000                 AREA             MyData, DATA, READWRITE
   49 00000000         
   50 00000000 00 00 00 
              00       LAST_BUMPER1_STATE
                               SPACE            4
   51 00000004 00 00 00 
              00       LAST_BUMPER2_STATE
                               SPACE            4
   52 00000008         
   53 00000008                 AREA             |.text|, CODE, READONLY
   54 00000000                 ENTRY
   55 00000000         
   56 00000000                 EXPORT           BUMPER_INIT
   57 00000000                 EXPORT           BUMPER_CHECK_DROIT
   58 00000000                 EXPORT           BUMPER_CHECK_GAUCHE
   59 00000000                 EXPORT           HANDLE_BUMPER_SET_SPEED
   60 00000000         
   61 00000000                 IMPORT           CALL_MOTEUR_RECULER_SHORT
   62 00000000                 IMPORT           MOTEUR_RECULER_SHORT
   63 00000000                 IMPORT           LOOP_SHORT
   64 00000000                 IMPORT           rotleft
   65 00000000                 IMPORT           rotright
   66 00000000                 IMPORT           ENABLE_STACK_SYSCTL_RCGC2
   67 00000000                 IMPORT           INCREASE_SPEED_MODE
   68 00000000                 IMPORT           REDUCE_SPEED_MODE
   69 00000000         
   70 00000000                 IMPORT           RETURN
   71 00000000         
   72 00000000         BUMPER_INIT
   73 00000000         
   74 00000000 B500            push             {lr}
   75 00000002 F04F 0010       mov              r0, #0x00000010 ;; Enable clock
                                                             sur GPIO E
   76 00000006 B401            push             {r0}
   77 00000008 F7FF FFFE       BL               ENABLE_STACK_SYSCTL_RCGC2
   78 0000000C         
   79 0000000C         
   80 0000000C         ; Enable Digital Function - Port E
   81 0000000C 4F32            ldr              r7, = GPIO_PORTE_BASE+GPIO_O_DE
N
   82 0000000E F04F 0003       ldr              r0, = PORT01
   83 00000012 6038            str              r0, [r7]
   84 00000014         
   85 00000014         ; Activer le registre des bumpers, Port E
   86 00000014 4F31            ldr              r7, = GPIO_PORTE_BASE+GPIO_PUR
   87 00000016 F04F 0003       ldr              r0, = PORT01
   88 0000001A 6038            str              r0, [r7]
   89 0000001C F85D EB04       pop              {lr}
   90 00000020 4770            BX               lr
   91 00000022         
   92 00000022         BUMPER_CHECK_DROIT



ARM Macro Assembler    Page 3 


   93 00000022 4F2F            ldr              r7,= GPIO_PORTE_BASE + (PORT0<<
2)
   94 00000024 683D            ldr              r5, [r7]
   95 00000026 2D01            cmp              r5,#0x01
   96 00000028 F43F AFFE       BEQ              RETURN
   97 0000002C F7FF FFFE       bl               CALL_MOTEUR_RECULER_SHORT
   98 00000030 F7FF BFFE       B                rotleft
   99 00000034         
  100 00000034         BUMPER_CHECK_GAUCHE
  101 00000034 F8DF 90AC       ldr              r9, = GPIO_PORTE_BASE + (PORT1<
<2)
  102 00000038 F8D9 A000       ldr              r10, [r9]
  103 0000003C F1BA 0F02       cmp              r10, #0x02
  104 00000040 F43F AFFE       BEQ              RETURN
  105 00000044 F7FF FFFE       bl               CALL_MOTEUR_RECULER_SHORT
  106 00000048 F7FF BFFE       B                rotright
  107 0000004C         
  108 0000004C         
  109 0000004C         HANDLE_BUMPER_SET_SPEED
  110 0000004C B500            push             {lr}        ; Save registers an
                                                            d return address
  111 0000004E         
  112 0000004E         ; --- Check Bumper 1 (PORT1) ---
  113 0000004E F8DF 9094       ldr              r9, = GPIO_PORTE_BASE + (PORT1 
<< 2)
  114 00000052 F8D9 A000       ldr              r10, [r9]   ; Read PORT1 bumper
                                                             state
  115 00000056 F1BA 0F02       cmp              r10, #0x02  ; Check if bit 1 (B
                                                            umper 1) is pressed
                                                            
  116 0000005A D108            bne              HANDLE_BUMPER1_PRESS ; If press
                                                            ed, handle it
  117 0000005C F000 F827       BL               BUMPER1_NOT_PRESSED ; Otherwise
                                                            , reset its state
  118 00000060         
  119 00000060         ; --- Check Bumper 2 (PORT0) ---
  120 00000060 4F1F            ldr              r7, = GPIO_PORTE_BASE + (PORT0 
<< 2)
  121 00000062 683D            ldr              r5, [r7]    ; Read PORT0 bumper
                                                             state
  122 00000064 2D01            cmp              r5, #0x01   ; Check if bit 0 (B
                                                            umper 2) is pressed
                                                            
  123 00000066 D112            bne              HANDLE_BUMPER2_PRESS ; If press
                                                            ed, handle it
  124 00000068 F000 F828       BL               BUMPER2_NOT_PRESSED ; Otherwise
                                                            , reset its state
  125 0000006C         
  126 0000006C E02D            b                HANDLE_BUMPER_END 
                                                            ; End of handling
  127 0000006E         
  128 0000006E         HANDLE_BUMPER1_PRESS
  129 0000006E F8DF B078       ldr              r11, = LAST_BUMPER1_STATE
  130 00000072 F8DB C000       ldr              r12, [r11]  ; Load previous sta
                                                            te of Bumper 1
  131 00000076 F1BC 0F01       cmp              r12, #1     ; Was it already pr
                                                            essed?
  132 0000007A D026            beq              HANDLE_BUMPER_END ; If yes, ski
                                                            p processing



ARM Macro Assembler    Page 4 


  133 0000007C         
  134 0000007C         ; First press detected
  135 0000007C F04F 0C01       mov              r12, #1     ; Update state to "
                                                            pressed"
  136 00000080 F8CB C000       str              r12, [r11]  ; Save new state
  137 00000084 F000 F824       BL               DEBOUNCE_DELAY
  138 00000088 F7FF FFFE       BL               REDUCE_SPEED_MODE ; Call reduce
                                                             speed function
  139 0000008C E01D            b                HANDLE_BUMPER_END ; Skip furthe
                                                            r processing
  140 0000008E         
  141 0000008E         HANDLE_BUMPER2_PRESS
  142 0000008E F8DF B05C       ldr              r11, = LAST_BUMPER2_STATE
  143 00000092 F8DB C000       ldr              r12, [r11]  ; Load previous sta
                                                            te of Bumper 2
  144 00000096 F1BC 0F01       cmp              r12, #1     ; Was it already pr
                                                            essed?
  145 0000009A D016            beq              HANDLE_BUMPER_END ; If yes, ski
                                                            p processing
  146 0000009C         
  147 0000009C         ; First press detected
  148 0000009C F04F 0C01       mov              r12, #1     ; Update state to "
                                                            pressed"
  149 000000A0 F8CB C000       str              r12, [r11]  ; Save new state
  150 000000A4 F000 F814       BL               DEBOUNCE_DELAY
  151 000000A8 F7FF FFFE       BL               INCREASE_SPEED_MODE ; Call incr
                                                            ease speed function
                                                            
  152 000000AC E00D            b                HANDLE_BUMPER_END ; Skip furthe
                                                            r processing
  153 000000AE         
  154 000000AE         BUMPER1_NOT_PRESSED
  155 000000AE F8DF B038       ldr              r11, = LAST_BUMPER1_STATE
  156 000000B2 F04F 0C00       mov              r12, #0     ; Reset state to "n
                                                            ot pressed"
  157 000000B6 F8CB C000       str              r12, [r11]
  158 000000BA 4770            bx               lr
  159 000000BC         
  160 000000BC         BUMPER2_NOT_PRESSED
  161 000000BC F8DF B02C       ldr              r11, = LAST_BUMPER2_STATE
  162 000000C0 F04F 0C00       mov              r12, #0     ; Reset state to "n
                                                            ot pressed"
  163 000000C4 F8CB C000       str              r12, [r11]
  164 000000C8 4770            bx               lr
  165 000000CA         
  166 000000CA         HANDLE_BUMPER_END
  167 000000CA F85D EB04       pop              {lr}        ; Restore registers
                                                             and return
  168 000000CE 4770            bx               lr
  169 000000D0         
  170 000000D0         
  171 000000D0         DEBOUNCE_DELAY
  172 000000D0 4807            ldr              R0, =DELAY  ; Arbitrary delay c
                                                            ount
  173 000000D2         DEBOUNCE_LOOP
  174 000000D2 1E40            SUBS             R0, R0, #1
  175 000000D4 D1FD            BNE              DEBOUNCE_LOOP ; Wait for the de
                                                            lay
  176 000000D6 4770            BX               LR



ARM Macro Assembler    Page 5 


  177 000000D8         
  178 000000D8         
  179 000000D8                 END
              4002451C 
              40024510 
              40024004 
              40024008 
              00000000 
              00000000 
              000FFFFF 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\objects\rk_config_bumper.d -o.\objects\rk_config_bumper.o -I.\RT
E\_Target_1 -IC:\Users\cypbo\AppData\Local\Arm\Packs\ARM\CMSIS\5.5.1\CMSIS\Core
\Include -IC:\Users\cypbo\AppData\Local\Arm\Packs\ARM\CMSIS\5.5.1\Device\ARM\AR
MCM3\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 52
8" --predefine="_RTE_ SETA 1" --predefine="ARMCM3 SETA 1" --list=.\listings\rk_
config_bumper.lst RK_Config_Bumper.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

LAST_BUMPER1_STATE 00000000

Symbol: LAST_BUMPER1_STATE
   Definitions
      At line 50 in file RK_Config_Bumper.s
   Uses
      At line 129 in file RK_Config_Bumper.s
      At line 155 in file RK_Config_Bumper.s

LAST_BUMPER2_STATE 00000004

Symbol: LAST_BUMPER2_STATE
   Definitions
      At line 51 in file RK_Config_Bumper.s
   Uses
      At line 142 in file RK_Config_Bumper.s
      At line 161 in file RK_Config_Bumper.s

MyData 00000000

Symbol: MyData
   Definitions
      At line 48 in file RK_Config_Bumper.s
   Uses
      None
Comment: MyData unused
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 53 in file RK_Config_Bumper.s
   Uses
      None
Comment: .text unused
BUMPER1_NOT_PRESSED 000000AE

Symbol: BUMPER1_NOT_PRESSED
   Definitions
      At line 154 in file RK_Config_Bumper.s
   Uses
      At line 117 in file RK_Config_Bumper.s
Comment: BUMPER1_NOT_PRESSED used once
BUMPER2_NOT_PRESSED 000000BC

Symbol: BUMPER2_NOT_PRESSED
   Definitions
      At line 160 in file RK_Config_Bumper.s
   Uses
      At line 124 in file RK_Config_Bumper.s
Comment: BUMPER2_NOT_PRESSED used once
BUMPER_CHECK_DROIT 00000022

Symbol: BUMPER_CHECK_DROIT
   Definitions
      At line 92 in file RK_Config_Bumper.s
   Uses
      At line 57 in file RK_Config_Bumper.s
Comment: BUMPER_CHECK_DROIT used once
BUMPER_CHECK_GAUCHE 00000034

Symbol: BUMPER_CHECK_GAUCHE
   Definitions
      At line 100 in file RK_Config_Bumper.s
   Uses
      At line 58 in file RK_Config_Bumper.s
Comment: BUMPER_CHECK_GAUCHE used once
BUMPER_INIT 00000000

Symbol: BUMPER_INIT
   Definitions
      At line 72 in file RK_Config_Bumper.s
   Uses
      At line 56 in file RK_Config_Bumper.s
Comment: BUMPER_INIT used once
DEBOUNCE_DELAY 000000D0

Symbol: DEBOUNCE_DELAY
   Definitions
      At line 171 in file RK_Config_Bumper.s
   Uses
      At line 137 in file RK_Config_Bumper.s
      At line 150 in file RK_Config_Bumper.s

DEBOUNCE_LOOP 000000D2




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: DEBOUNCE_LOOP
   Definitions
      At line 173 in file RK_Config_Bumper.s
   Uses
      At line 175 in file RK_Config_Bumper.s
Comment: DEBOUNCE_LOOP used once
HANDLE_BUMPER1_PRESS 0000006E

Symbol: HANDLE_BUMPER1_PRESS
   Definitions
      At line 128 in file RK_Config_Bumper.s
   Uses
      At line 116 in file RK_Config_Bumper.s
Comment: HANDLE_BUMPER1_PRESS used once
HANDLE_BUMPER2_PRESS 0000008E

Symbol: HANDLE_BUMPER2_PRESS
   Definitions
      At line 141 in file RK_Config_Bumper.s
   Uses
      At line 123 in file RK_Config_Bumper.s
Comment: HANDLE_BUMPER2_PRESS used once
HANDLE_BUMPER_END 000000CA

Symbol: HANDLE_BUMPER_END
   Definitions
      At line 166 in file RK_Config_Bumper.s
   Uses
      At line 126 in file RK_Config_Bumper.s
      At line 132 in file RK_Config_Bumper.s
      At line 139 in file RK_Config_Bumper.s
      At line 145 in file RK_Config_Bumper.s
      At line 152 in file RK_Config_Bumper.s

HANDLE_BUMPER_SET_SPEED 0000004C

Symbol: HANDLE_BUMPER_SET_SPEED
   Definitions
      At line 109 in file RK_Config_Bumper.s
   Uses
      At line 59 in file RK_Config_Bumper.s
Comment: HANDLE_BUMPER_SET_SPEED used once
12 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

DELAY 000FFFFF

Symbol: DELAY
   Definitions
      At line 45 in file RK_Config_Bumper.s
   Uses
      At line 172 in file RK_Config_Bumper.s
Comment: DELAY used once
GPIO_O_DEN 0000051C

Symbol: GPIO_O_DEN
   Definitions
      At line 26 in file RK_Config_Bumper.s
   Uses
      At line 81 in file RK_Config_Bumper.s
Comment: GPIO_O_DEN used once
GPIO_O_DIR 00000400

Symbol: GPIO_O_DIR
   Definitions
      At line 14 in file RK_Config_Bumper.s
   Uses
      None
Comment: GPIO_O_DIR unused
GPIO_O_DR2R 00000500

Symbol: GPIO_O_DR2R
   Definitions
      At line 20 in file RK_Config_Bumper.s
   Uses
      None
Comment: GPIO_O_DR2R unused
GPIO_PORTE_BASE 40024000

Symbol: GPIO_PORTE_BASE
   Definitions
      At line 7 in file RK_Config_Bumper.s
   Uses
      At line 81 in file RK_Config_Bumper.s
      At line 86 in file RK_Config_Bumper.s
      At line 93 in file RK_Config_Bumper.s
      At line 101 in file RK_Config_Bumper.s
      At line 113 in file RK_Config_Bumper.s
      At line 120 in file RK_Config_Bumper.s

GPIO_PUR 00000510

Symbol: GPIO_PUR
   Definitions
      At line 30 in file RK_Config_Bumper.s
   Uses
      At line 86 in file RK_Config_Bumper.s
Comment: GPIO_PUR used once
PORT0 00000001

Symbol: PORT0
   Definitions
      At line 38 in file RK_Config_Bumper.s
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

      At line 93 in file RK_Config_Bumper.s
      At line 120 in file RK_Config_Bumper.s

PORT01 00000003

Symbol: PORT01
   Definitions
      At line 34 in file RK_Config_Bumper.s
   Uses
      At line 82 in file RK_Config_Bumper.s
      At line 87 in file RK_Config_Bumper.s

PORT1 00000002

Symbol: PORT1
   Definitions
      At line 42 in file RK_Config_Bumper.s
   Uses
      At line 101 in file RK_Config_Bumper.s
      At line 113 in file RK_Config_Bumper.s

9 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

CALL_MOTEUR_RECULER_SHORT 00000000

Symbol: CALL_MOTEUR_RECULER_SHORT
   Definitions
      At line 61 in file RK_Config_Bumper.s
   Uses
      At line 97 in file RK_Config_Bumper.s
      At line 105 in file RK_Config_Bumper.s

ENABLE_STACK_SYSCTL_RCGC2 00000000

Symbol: ENABLE_STACK_SYSCTL_RCGC2
   Definitions
      At line 66 in file RK_Config_Bumper.s
   Uses
      At line 77 in file RK_Config_Bumper.s
Comment: ENABLE_STACK_SYSCTL_RCGC2 used once
INCREASE_SPEED_MODE 00000000

Symbol: INCREASE_SPEED_MODE
   Definitions
      At line 67 in file RK_Config_Bumper.s
   Uses
      At line 151 in file RK_Config_Bumper.s
Comment: INCREASE_SPEED_MODE used once
LOOP_SHORT 00000000

Symbol: LOOP_SHORT
   Definitions
      At line 63 in file RK_Config_Bumper.s
   Uses
      None
Comment: LOOP_SHORT unused
MOTEUR_RECULER_SHORT 00000000

Symbol: MOTEUR_RECULER_SHORT
   Definitions
      At line 62 in file RK_Config_Bumper.s
   Uses
      None
Comment: MOTEUR_RECULER_SHORT unused
REDUCE_SPEED_MODE 00000000

Symbol: REDUCE_SPEED_MODE
   Definitions
      At line 68 in file RK_Config_Bumper.s
   Uses
      At line 138 in file RK_Config_Bumper.s
Comment: REDUCE_SPEED_MODE used once
RETURN 00000000

Symbol: RETURN
   Definitions
      At line 70 in file RK_Config_Bumper.s
   Uses
      At line 96 in file RK_Config_Bumper.s
      At line 104 in file RK_Config_Bumper.s

rotleft 00000000



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols


Symbol: rotleft
   Definitions
      At line 64 in file RK_Config_Bumper.s
   Uses
      At line 98 in file RK_Config_Bumper.s
Comment: rotleft used once
rotright 00000000

Symbol: rotright
   Definitions
      At line 65 in file RK_Config_Bumper.s
   Uses
      At line 106 in file RK_Config_Bumper.s
Comment: rotright used once
9 symbols
369 symbols in table
